
指令：
    v-on:事件=“函数”   事件绑定
	v-model 双向数据绑定
	v-for   循环 '(每一项,下标) in 循环的数组'
	v-html  innerHTML输出
	v-text   innerText输出
	v-pre   跳过渲染
	v-once  只渲染一次
	v-cloak  渲染完成之后移除	[v-cloak]{display: none;}
	v-show 显示隐藏   所有的dom都会加载，条件不匹配的display:none 没有缓存  适合频繁切换
	v-if   条件判断   只加载条件为true的  有缓存  适合偶尔切换
		// v-else      
		// v-else-if

	v-bind :属性=“数值” 属性绑定
生命周期：
    beforeCreate 创建前
	created 创建后 
	beforeMount 渲染前
	mounted 渲染后
	beforeUpdate 视图更新前
	updated 视图更新后
	beforeDestroy 销毁前
	destroyed 销毁后
侦听属性：
    watch 针对一个变量进行监听
      	watch:{
        	name(修改后，修改前){

			}
		}
计算属性 ：computed
Bootstrap响应式：	xsmd
	xs 移动端
	sm 平板
	md pc端
动态的改变数组的内容 
    原生js方法：
    this.arr.splice(0,1,12)
    vue的方法：
    this.$set(this.arr , 下标 , 要变得值)
动态的改变 length
    js原生数组操作截取
    this.arr = this.arr.slice(0, 2)
动态的给json添加属性
    this.$set(this.json , key , value);
请求方式：
	get
		this.$http.get(url,{params:{}}).then((data)=>{},(err)=>{})
	post
		this.$http.post(url,{key:vlaue},{emulateJSON:true}).then((data)=>{},(err)=>{})
	jsonp
		this.$http.jsonp(url,{params:{},callback:name}).then((data)=>{},(err)=>{})